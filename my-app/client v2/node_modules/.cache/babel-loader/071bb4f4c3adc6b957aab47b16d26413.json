{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ariel\\\\Documents\\\\mindhub\\\\ArielDosSantos\\\\MYtinerary\\\\my-app\\\\client v2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ariel\\\\Documents\\\\mindhub\\\\ArielDosSantos\\\\MYtinerary\\\\my-app\\\\client v2\\\\src\\\\Components\\\\Botonactivity.js\";\nimport React, { useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\n\nconst Example = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1];\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const ciudad = props.ciudad;\n  console.log(props);\n  const actividades = props.actividades;\n  const ciudadfilt = actividades.filter(x => x.ciudad === ciudad);\n  const cantacti = ciudadfilt.length;\n  const titulo = props.titulo;\n  const actfilt = actividades.filter(x => x.title === titulo);\n\n  if (cantacti == 0) {\n    return React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"no hay nada\");\n  } //meter un loading y qeu despues muestre lo que hay\n  else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: toggle,\n        style: {\n          marginBottom: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, props.titulo), actfilt.map(partofact => {\n        if (partofact.title === titulo) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(Collapse, {\n            isOpen: isOpen,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(Card, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            style: {\n              width: \"20%\",\n              height: \"100%\",\n              position: \"relative\",\n              alignItems: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: partofact.img,\n            style: {\n              width: \"100%\",\n              height: \"100%\",\n              position: \"relative\",\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }))))));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(Collapse, {\n            isOpen: isOpen,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, React.createElement(Card, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, \"No hay actividades aun\"))));\n        }\n\n        ;\n      }));\n    }\n};\n\nexport default Example;","map":{"version":3,"sources":["C:/Users/ariel/Documents/mindhub/ArielDosSantos/MYtinerary/my-app/client v2/src/Components/Botonactivity.js"],"names":["React","useState","Collapse","Button","CardBody","Card","Example","props","isOpen","setIsOpen","toggle","ciudad","console","log","actividades","ciudadfilt","filter","x","cantacti","length","titulo","actfilt","title","marginBottom","map","partofact","width","height","position","alignItems","img","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,YAAjD;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA,oBACKN,QAAQ,CAAC,KAAD,CADb;AAAA;AAAA,QAChBO,MADgB;AAAA,QACRC,SADQ;;AAEvB,QAAMC,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AACA,QAAMG,MAAM,GAAGJ,KAAK,CAACI,MAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,QAAMO,WAAW,GAAGP,KAAK,CAACO,WAA1B;AACA,QAAMC,UAAU,GAAGD,WAAW,CAACE,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACN,MAAF,KAAaA,MAArC,CAAnB;AACA,QAAMO,QAAQ,GAAGH,UAAU,CAACI,MAA5B;AACA,QAAMC,MAAM,GAAEb,KAAK,CAACa,MAApB;AACA,QAAMC,OAAO,GAAEP,WAAW,CAACE,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACK,KAAF,KAAYF,MAApC,CAAf;;AAEA,MAAIF,QAAQ,IAAI,CAAhB,EAAmB;AAAE,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAA6B,GAAlD,CAAmD;AAAnD,OACK;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,MAAD;AACO,QAAA,KAAK,EAAC,SADb;AAEO,QAAA,OAAO,EAAER,MAFhB;AAGO,QAAA,KAAK,EAAE;AAAEa,UAAAA,YAAY,EAAE;AAAhB,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIQhB,KAAK,CAACa,MAJd,CADL,EAOaC,OAAO,CAACG,GAAR,CAAYC,SAAS,IAAI;AAC1B,YAAGA,SAAS,CAACH,KAAV,KAAkBF,MAArB,EAA4B;AAC5B,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,QAAD;AAAU,YAAA,MAAM,EAAEZ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,KAAK,EAAE;AAACkB,cAAAA,KAAK,EAAC,KAAP;AAAcC,cAAAA,MAAM,EAAC,MAArB;AAA6BC,cAAAA,QAAQ,EAAC,UAAtC;AAAiDC,cAAAA,UAAU,EAAC;AAA5D,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAK,YAAA,GAAG,EAAEJ,SAAS,CAACK,GAApB;AAAyB,YAAA,KAAK,EAAE;AAACJ,cAAAA,KAAK,EAAC,MAAP;AAAeC,cAAAA,MAAM,EAAC,MAAtB;AAA6BC,cAAAA,QAAQ,EAAC,UAAtC;AAAiDG,cAAAA,SAAS,EAAC;AAA3D,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADJ,CADA,CADJ,CADJ,CADA;AAYF,SAbE,MAaE;AACF,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,QAAD;AAAU,YAAA,MAAM,EAAEvB,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADA,CADA,CADA,CADA;AAWH;;AAAA;AACJ,OA3BQ,CAPb,CADJ;AAqCE;AACR,CAnDF;;AAqDA,eAAeF,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\n\nconst Example = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const ciudad = props.ciudad\n    console.log(props)\n    const actividades = props.actividades\n    const ciudadfilt = actividades.filter(x => x.ciudad === ciudad);\n    const cantacti = ciudadfilt.length;\n    const titulo= props.titulo;\n    const actfilt= actividades.filter(x => x.title === titulo);\n\n    if (cantacti == 0) { return <h3>no hay nada</h3> } //meter un loading y qeu despues muestre lo que hay\n    else {\n        return (\n            <div>\n                 <Button\n                        color=\"primary\"\n                        onClick={toggle}\n                        style={{ marginBottom: '1rem' }}>\n                        {props.titulo}\n                  </Button>\n                        {actfilt.map(partofact => {\n                        if(partofact.title===titulo){\n                        return (\n                        <div>\n                            <Collapse isOpen={isOpen}>\n                                <Card>\n                                <CardBody>\n                                    <div style={{width:\"20%\", height:\"100%\", position:\"relative\",alignItems:\"center\"}}>\n                                    <img src={partofact.img} style={{width:\"100%\", height:\"100%\",position:\"relative\",textAlign:\"center\"}}/>\n                                    </div>\n                                </CardBody>\n                                </Card>\n                            </Collapse>\n                        </div>\n                    )}else{\n                        return(\n                        <div>\n                        <Collapse isOpen={isOpen}>\n                        <Card>\n                        <CardBody>\n                          No hay actividades aun\n                        </CardBody>\n                        </Card>\n                    </Collapse>\n                    </div>\n                        )\n                    };\n                })}\n        </div >\n        )}\n\t}\n    \nexport default Example;"]},"metadata":{},"sourceType":"module"}