{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ariel\\\\Documents\\\\mindhub\\\\ArielDosSantos\\\\MYtinerary\\\\my-app\\\\client v2\\\\src\\\\Pages\\\\Itinerary.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getItinerary } from '../Redux/Actions/Itineraryactions';\nimport PropTypes from 'prop-types';\nimport Carousel from '../Components/Carousel';\n\nclass Itinerary extends React.Component {\n  componentDidMount() {\n    let ciudad = this.props.match.params.ciudad_id;\n    this.props.getItinerary(ciudad);\n  }\n\n  render() {\n    const itinerary = this.props.itinerary.itinerary;\n    console.log(itinerary);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, itinerary.length > 0 ? //hay itinerarios \n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Carousel, {\n      itinerario: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })) : //No hay itinerarios \n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Por el momento no hay itinerarios cargados\"))));\n  }\n\n}\n\nItinerary.propTypes = {\n  getItinerary: PropTypes.func.isRequired,\n  itinerary: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  itinerary: state.itineraryitem\n});\n\nexport default connect(mapStateToProps, {\n  getItinerary\n})(Itinerary);","map":{"version":3,"sources":["C:/Users/ariel/Documents/mindhub/ArielDosSantos/MYtinerary/my-app/client v2/src/Pages/Itinerary.js"],"names":["React","connect","getItinerary","PropTypes","Carousel","Itinerary","Component","componentDidMount","ciudad","props","match","params","ciudad_id","render","itinerary","console","log","length","propTypes","func","isRequired","object","mapStateToProps","state","itineraryitem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAMvCC,EAAAA,iBAAiB,GAAG;AACnB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,SAArC;AACA,SAAKH,KAAL,CAAWP,YAAX,CAAwBM,MAAxB;AACC;;AAGDK,EAAAA,MAAM,GAAG;AAAA,UACCC,SADD,GACe,KAAKL,KAAL,CAAWK,SAD1B,CACCA,SADD;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,SAAS,CAACG,MAAV,GAAkB,CAAlB,GACD;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAEH,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFC,GAKD;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,CADJ,CAPF,CADF;AAeF;;AA9BsC;;AAAlCT,S,CAEGa,S,GAAY;AACnBhB,EAAAA,YAAY,EAAEC,SAAS,CAACgB,IAAV,CAAeC,UADV;AAEnBN,EAAAA,SAAS,EAAEX,SAAS,CAACkB,MAAV,CAAiBD;AAFT,C;;AA8BrB,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCT,EAAAA,SAAS,EAAES,KAAK,CAACC;AADgB,CAAL,CAA7B;;AAIA,eAAevB,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA2CG,SAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { getItinerary } from '../Redux/Actions/Itineraryactions';\nimport PropTypes from 'prop-types';\nimport Carousel from '../Components/Carousel';\n\n\nclass Itinerary extends React.Component {\n\n  static propTypes = {\n\t\tgetItinerary: PropTypes.func.isRequired,\n\t\titinerary: PropTypes.object.isRequired,\n  };\n componentDidMount() {\n  let ciudad = this.props.match.params.ciudad_id;\n  this.props.getItinerary(ciudad)\n  };\n\n\n  render() {\n    const { itinerary } = this.props.itinerary;\n    console.log(itinerary);\n    return (\n      <div>\n        {itinerary.length >0 ?\n        //hay itinerarios \n        <div> \n            <Carousel itinerario={itinerary}/>\n        </div>:\n        //No hay itinerarios \n        <div>\n            <div>\n              <h1>Por el momento no hay itinerarios cargados</h1>\n            </div>\n        </div>}\n      </div>\n    );\n\t}\n}\nconst mapStateToProps = state => ({\n\titinerary: state.itineraryitem,\n});\n\nexport default connect(mapStateToProps, { getItinerary })(Itinerary);"]},"metadata":{},"sourceType":"module"}